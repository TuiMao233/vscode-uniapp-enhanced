{
  // 条件注释 comment
  "#ifdef": {
    "prefix": "ifdef",
    "body": [
      "// #ifdef ${1|APP-PLUS,APP-PLUS-NVUE,MP,MP-ALIPAY,MP-BAIDU,MP-WEIXIN,MP-QQ,H5|}",
      "$0",
      "// #endif"
    ]
  },
  "#ifndef": {
    "prefix": "ifndef",
    "body": [
      "// #ifndef ${1|APP-PLUS,APP-PLUS-NVUE,MP,MP-ALIPAY,MP-BAIDU,MP-WEIXIN,MP-QQ,H5|}",
      "$0",
      "// #endif"
    ]
  },

  // 应用生命周期
  "onLaunch": {
    "prefix": "onLaunch",
    "body": [
        "onLaunch() {$0},"
    ],
    "description": "onLaunch"
  },
  "onError": {
    "prefix": "onError",
    "body": [
        "onError() {$0},"
    ],
    "description": "onError"
  },
  "onUniNViewMessage": {
    "prefix": "onUniNViewMessage",
    "body": [
        "onUniNViewMessage() {$0},"
    ],
    "description": "onUniNViewMessage"
  },
  "onUnhandledRejection": {
    "prefix": "onUnhandledRejection",
    "body": [
        "onUnhandledRejection() {$0},"
    ],
    "description": "onUnhandledRejection"
  },
  "onPageNotFound": {
    "prefix": "onPageNotFound",
    "body": [
        "onPageNotFound() {$0},"
    ],
    "description": "onPageNotFound"
  },
  "onThemeChange": {
    "prefix": "onThemeChange",
    "body": [
        "onThemeChange() {$0},"
    ],
    "description": "onThemeChange"
  },

  // 页面生命周期
  "onLoad": {
    "prefix": "onLoad",
    "body": [
        "onLoad(args) {$0},"
    ],
    "description": "onLoad"
  },
  "onShow": {
    "prefix": "onShow",
    "body": [
        "onShow() {$0},"
    ],
    "description": "onShow"
  },
  "onReady": {
    "prefix": "onReady",
    "body": [
        "onReady() {$0},"
    ],
    "description": "onReady"
  },
  "onHide": {
    "prefix": "onHide",
    "body": [
        "onHide() {$0},"
    ],
    "description": "onHide"
  },
  "onUnload": {
    "prefix": "onUnload",
    "body": [
        "onUnload() {$0},"
    ],
    "description": "onUnload"
  },
  "onResize": {
    "prefix": "onResize",
    "body": [
        "onResize() {$0},"
    ],
    "description": "onResize"
  },
  "onPullDownRefresh": {
    "prefix": "onPullDownRefresh",
    "body": [
        "onPullDownRefresh() {$0},"
    ],
    "description": "onPullDownRefresh"
  },
  "onReachBottom": {
    "prefix": "onReachBottom",
    "body": [
        "onReachBottom() {$0},"
    ],
    "description": "onReachBottom"
  },
  "onTabItemTap": {
    "prefix": "onTabItemTap",
    "body": [
        "onTabItemTap() {$0},"
    ],
    "description": "onTabItemTap"
  },
  "onShareAppMessage": {
    "prefix": "onShareAppMessage",
    "body": [
        "onShareAppMessage() {$0},"
    ],
    "description": "onShareAppMessage"
  },
  "onPageScroll": {
    "prefix": "onPageScroll",
    "body": [
        "onPageScroll() {$0},"
    ],
    "description": "onPageScroll"
  },
  "onNavigationBarButtonTap": {
    "prefix": "onNavigationBarButtonTap",
    "body": [
        "onNavigationBarButtonTap() {$0},"
    ],
    "description": "onNavigationBarButtonTap"
  },
  "onBackPress": {
    "prefix": "onBackPress",
    "body": [
        "onBackPress() {$0},"
    ],
    "description": "onBackPress"
  },
  "onNavigationBarSearchInputChanged": {
    "prefix": "onNavigationBarSearchInputChanged",
    "body": [
        "onNavigationBarSearchInputChanged() {$0},"
    ],
    "description": "onNavigationBarSearchInputChanged"
  },
  "onNavigationBarSearchInputConfirmed": {
    "prefix": "onNavigationBarSearchInputConfirmed",
    "body": [
        "onNavigationBarSearchInputConfirmed() {$0},"
    ],
    "description": "onNavigationBarSearchInputConfirmed"
  },
  "onNavigationBarSearchInputClicked": {
    "prefix": "onNavigationBarSearchInputClicked",
    "body": [
        "onNavigationBarSearchInputClicked() {$0},"
    ],
    "description": "onNavigationBarSearchInputClicked"
  },
  "onShareTimeline": {
    "prefix": "onShareTimeline",
    "body": [
        "onShareTimeline() {$0},"
    ],
    "description": "onShareTimeline"
  },
  "onAddToFavorites": {
    "prefix": "onAddToFavorites",
    "body": [
        "onAddToFavorites() {$0},"
    ],
    "description": "onAddToFavorites"
  },

  // 弹出层
  "uni.showToast": {
    "prefix": "uni.showToast",
    "body": [
      "uni.showToast({",
      "\ttitle: '$1'",
      "\ticon: '${2:none}'",
      "})"
    ],
    "description": "uni.showToast"
  },
  "uni.hideToast": {
    "prefix": "uni.hideToast",
    "body": [
      "uni.hideToast()"
    ],
    "description": "uni.hideToast"
  },
  "uni.showLoading": {
    "prefix": "uni.showLoading",
    "body": [
      "uni.showLoading({",
      "\ttitle: '$1',",
      "\tmask: ${2:false}",
      "})"
    ],
    "description": "uni.showLoading"
  },
  "uni.hideLoading": {
    "prefix": "uni.hideLoading",
    "body": [
      "uni.hideLoading()"
    ],
    "description": "uni.hideLoading"
  },
  "uni.showModal": {
    "prefix": "uni.showModal",
    "body": [
      "uni.showModal({",
      "\ttitle: '$1',",
      "\tcontent: '$2',",
      "\tshowCancel: ${3:false},",
      "\tcancelText: '$4',",
      "\tconfirmText: '$5',",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.showModal"
  },
  "uni.showModal:alert": {
    "prefix": "uni.showModal:alert",
    "body": [
      "uni.showModal({",
      "\tcontent: '$1',",
      "\tshowCancel: false",
      "})"
    ],
    "description": "uni.showModal:alert"
  },
  "uni.showModal:confirm": {
    "prefix": "uni.showModal:confirm",
    "body": [
      "uni.showModal({",
      "\tcontent: '$1',",
      "\tsuccess: (res) => {",
      "\t\tif (res.confirm) {",
      "\t\t\t$2",
      "\t\t} else if (res.cancel) {",
      "\t\t\t$3",
      "\t\t}",
      "\t}",
      "})"
    ],
    "description": "uni.showModal:confirm"
  },
  "uni.showActionSheet": {
    "prefix": "uni.showActionSheet",
    "body": [
      "uni.showActionSheet({",
      "\titemList: [${1:'A', 'B', 'C'}],",
      "\tsuccess: (res) => {",
      "\t\tconsole.log('选中了第' + (res.tapIndex + 1) + '个按钮')$0",
      "},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.showActionSheet"
  },

  // Base64
  "uniapp.base64ToArrayBuffer": {
    "prefix": "uni.base64ToArrayBuffer",
    "body": [
      "uni.base64ToArrayBuffer(${1:base64})"
    ],
    "description": "uni.base64ToArrayBuffer"
  },
  "uniapp.arrayBufferToBase64": {
    "prefix": "uni.arrayBufferToBase64",
    "body": [
      "uni.arrayBufferToBase64(${1:arrayBuffer})"
    ],
    "description": "uni.arrayBufferToBase64"
  },

  // 路由、导航 route/navigation
  "uni.navigateTo": {
    "prefix": "uni.navigateTo",
    "body": [
      "uni.navigateTo({ url: '$1' })"
    ],
    "description": "uni.navigateTo"
  },
  "uni.navigateTo:callback": {
    "prefix": "uni.navigateTo:callback",
    "body": [
      "uni.navigateTo({",
      "\turl: '$1',",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.navigateTo:callback"
  },
  "uni.redirectTo": {
    "prefix": "uni.redirectTo",
    "body": [
      "uni.redirectTo({ url: '$1' })"
    ],
    "description": "uni.redirectTo"
  },
  "uni.redirectTo:callback": {
    "prefix": "uni.redirectTo:callback",
    "body": [
      "uni.redirectTo({",
      "\turl: '$1',",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.redirectTo:callback"
  },
  "uni.navigateBack": {
    "prefix": "uni.navigateBack",
    "body": [
      "uni.navigateBack()"
    ],
    "description": "uni.navigateBack"
  },
  "uni.navigateBack:delta": {
    "prefix": "uni.navigateBack:delta",
    "body": [
      "uni.navigateBack({ delta: ${1:1} })"
    ],
    "description": "uni.navigateBack:delta"
  },
  "uni.reLaunch": {
    "prefix": "uni.reLaunch()",
    "body": [
      "uni.reLaunch({",
      "\turl: '$0'",
      "})"
    ],
    "description": "uni.reLaunch"
  },
  "uni.switchTab": {
    "prefix": "uni.switchTab()",
    "body": [
      "uni.switchTab({",
      "\turl: '$0'",
      "})"
    ],
    "description": "uni.switchTab"
  },

  // 刷新 refresh
  "uni.startPullDownRefresh": {
    "prefix": "uni.startPullDownRefresh",
    "body": [
      "uni.startPullDownRefresh({",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.startPullDownRefresh"
  },
  "uni.stopPullDownRefresh": {
    "prefix": "uni.stopPullDownRefresh",
    "body": [
      "uni.stopPullDownRefresh()"
    ],
    "description": "uni.stopPullDownRefresh"
  },

  // 第三方服务
  "uni.login": {
    "prefix": "uni.login",
    "body": [
      "uni.login({",
      "\tprovider: '$1',",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.login"
  },
  "uni.share": {
    "prefix": "uni.share",
    "body": [
      "uni.share({",
      "\tprovider: '$1',",
      "\ttype: 0$2,",
      "\ttitle: '$3',",
      "\thref: '$4',",
      "\timageUrl: '$5',",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.share"
  },
  "uni.requestPayment": {
    "prefix": "uni.requestPayment",
    "body": [
      "uni.requestPayment({",
      "\tprovider: '$1',",
      "\torderInfo: '$2',",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.requestPayment"
  },

  // 请求 request
  "uni.request": {
    "prefix": "uni.request",
    "body": [
      "uni.request({",
      "\turl: '$1',",
      "\tmethod: '${2:GET}',",
      "\tdata: {$3},",
      "\tsuccess: (res) => {$0},",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.request"
  },
  "uni.uploadFile": {
    "prefix": "uni.uploadFile",
    "body": [
      "uni.uploadFile({",
      "\turl: '$1',",
      "\tfilePath: $2,",
      "\tname: '$3',",
      "\tformData: {$4}",
      "\tsuccess: (res) => {",
      "\t\t$0",
      "\t}",
      "})"
    ],
    "description": "uni.uploadFile"
  },
  "uni.downloadFile": {
    "prefix": "uni.downloadFile",
    "body": [
      "uni.downloadFile({",
      "\turl: '$1',",
      "\tsuccess: (res) => {",
      "\t\tif (res.statusCode === 200) {",
      "\t\t\t$0",
      "\t\t}",
      "\t}",
      "})"
    ],
    "description": "uni.downloadFile"
  },

  // socket
  "uni.connectSocket": {
    "prefix": "uni.connectSocket",
    "body": [
      "uni.connectSocket({",
      "\turl: 'wss://$1',",
      "\tdata() {",
      "\t\treturn {$2}",
      "\t},",
      "\theader: {",
      "\t\t'content-type': 'application/json'",
      "\t},",
      "\tmethod: 'GET'",
      "})"
    ],
    "description": "uni.connectSocket"
  },
  "uni.onSocketOpen": {
    "prefix": "uni.onSocketOpen",
    "body": [
      "uni.onSocketOpen(function (res) {",
      "\tconsole.log('WebSocket opened')",
      "})"
    ],
    "description": "uni.onSocketOpen"
  },
  "uni.onSocketError": {
    "prefix": "uni.onSocketError()",
    "body": [
      "uni.onSocketError(function (res) {",
      "\tconsole.log('WebSocket error')",
      "})"
    ],
    "description": "uni.onSocketError"
  },
  "uni.onSocketMessage": {
    "prefix": "uni.onSocketMessage",
    "body": [
      "uni.onSocketMessage(function (res) {",
      "\tconsole.log('收到服务器内容：' + res.data)",
      "})"
    ],
    "description": "uni.onSocketMessage"
  },
  "uni.sendSocketMessage": {
    "prefix": "uni.sendSocketMessage()",
    "body": [
      "uni.sendSocketMessage({",
      "\tdata: ${0: msg}",
      "})"
    ],
    "description": "uni.sendSocketMessage"
  },
  "uni.closeSocket": {
    "prefix": "uni.closeSocket",
    "body": [
      "uni.closeSocket()"
    ],
    "description": "uni.closeSocket"
  },
  "uni.onSocketClose": {
    "prefix": "uni.onSocketClose",
    "body": [
      "uni.onSocketClose(function (res) {",
      "\tconsole.log('WebSocket closed')",
      "})"
    ],
    "description": "uni.onSocketClose"
  },

  // 文件 file
  "uni.saveFile": {
    "prefix": "uni.saveFile",
    "body": [
      "uni.saveFile({",
      "\ttempFilePath: ${1:tempFilePaths[0]},",
      "\tsuccess: (res) => {",
      "\t\tlet savedFilePath = res.savedFilePath$0",
      "\t}",
      "})"
    ],
    "description": "uni.saveFile"
  },
  "uni.getSavedFileList": {
    "prefix": "uni.getSavedFileList",
    "body": [
      "uni.getSavedFileList({",
      "\tsuccess: (res) => {",
      "\t\tconsole.log(res.fileList)$0",
      "\t}",
      "})"
    ],
    "description": "uni.getSavedFileList"
  },
  "uniapp-获取本地文件的文件信息": {
      "prefix": "uni.getSavedFileInfo()",
      "body": [
          "uni.getSavedFileInfo({",
              "\tfilePath: 'unifile://somefile', //仅做示例用，非真正的文件路径",
              "\tsuccess: function (res) {",
                  "\t\tconsole.log(res.size);",
                  "\t\tconsole.log(res.createTime);",
              "\t}",
          "});"
      ],
      "description": "uniapp-获取本地文件的文件信息"
  },
  "uniapp-删除本地存储的文件": {
      "prefix": "uni.removeSavedFile()",
      "body": [
          "uni.removeSavedFile({",
              "\tfilePath: res.fileList[0].filePath,",
              "\tcomplete: function (res) {",
                  "\t\tconsole.log(res);",
              "\t}",
          "});"
      ],
      "description": "uniapp-删除本地存储的文件"
  },
  "uniapp-获取文件信息": {
      "prefix": "uni.getFileInfo()",
      "body": [
          "uni.getFileInfo({",
              "\tfilePath: res.fileList[0].filePath,",
          "});"
      ],
      "description": "uniapp-获取文件信息"
  },
  "uniapp-新开页面打开文档,支持格式：doc, xls, ppt, pdf, docx, xlsx, pptx。": {
      "prefix": "openDocument()",
      "body": [
          "openDocument({",
              "\tfilePath: filePath,",
              "\tsuccess: function (res) {",
                  "\t\tconsole.log('打开文档成功');",
              "\t})",
          "});"
      ],
      "description": "uniapp-新开页面打开文档"
  },

  // 存储 storage
  "uni.setStorage": {
    "prefix": "uni.setStorage",
    "body": [
      "uni.setStorage({",
      "\tkey: '$1',",
      "\tdata: '$2',",
      "\tsuccess: function () {",
      "\t\t$0",
      "\t}",
      "})"
    ],
    "description": "uni.setStorage"
  },
  "uni.setStorageSync": {
    "prefix": "uni.setStorageSync",
    "body": [
      "uni.setStorageSync('$1', '$2')"
    ],
    "description": "uni.setStorageSync"
  },
  "uni.getStorage": {
    "prefix": "uni.getStorage",
    "body": [
      "uni.getStorage({",
      "\tkey: '$1',",
      "\tsuccess: function (res) {",
      "\t\tconsole.log(res.data)",
      "\t}",
      "})"
    ],
    "description": "uni.getStorage"
  },
  "uni.getStorageSync": {
    "prefix": "uni.getStorageSync",
    "body": [
      "uni.getStorageSync('$0')"
    ],
    "description": "uni.getStorageSync"
  },
  "uni.getStorageInfo": {
    "prefix": "uni.getStorageInfo",
    "body": [
      "uni.getStorageInfo({",
      "\tsuccess: function (res) {",
      "\t\t$0",
      "\t}",
      "})"
    ],
    "description": "uni.getStorageInfo"
  },
  "uni.getStorageInfoSync": {
    "prefix": "uni.getStorageInfoSync",
    "body": [
      "uni.getStorageInfoSync()"
    ],
    "description": "uni.getStorageInfoSync"
  },
  "uni.removeStorage": {
    "prefix": "uni.removeStorage",
    "body": [
      "uni.removeStorage({",
      "\tkey: '$1',",
      "\tsuccess: function (res) {",
      "\t\t$0",
      "\t}",
      "})"
    ],
    "description": "uni.removeStorage"
  },
  "uni.removeStorageSync": {
    "prefix": "uni.removeStorageSync",
    "body": [
      "uni.removeStorageSync('$0')"
    ],
    "description": "uni.removeStorageSync"
  },
  "uni.clearStorage": {
    "prefix": "uni.clearStorage",
    "body": [
      "uni.clearStorage()"
    ],
    "description": "uni.clearStorage"
  },
  "uni.clearStorageSync": {
    "prefix": "uni.clearStorageSync",
    "body": [
      "uni.clearStorageSync()"
    ],
    "description": "uni.clearStorageSync"
  },

  // 位置 location
  "uni.chooseLocation": {
    "prefix": "uni.chooseLocation",
    "body": [
      "uni.chooseLocation({",
      "\tsuccess: (res) => {",
      "\t\tconsole.log('位置名称：' + res.name)",
      "\t\tconsole.log('详细地址：' + res.address)",
      "\t\tconsole.log('纬度：' + res.latitude)",
      "\t\tconsole.log('经度：' + res.longitude)",
      "\t}",
      "})"
    ],
    "description": "uni.chooseLocation"
  },
  "uni.getLocation": {
    "prefix": "uni.getLocation",
    "body": [
      "uni.getLocation({",
      "\ttype: '${1|wgs84,gcj02|}',",
      "\tsuccess: (res) => {$0}",
      "\tfail: () => {},",
      "\tcomplete: () => {}",
      "})"
    ],
    "description": "uni.getLocation"
  },
  "uni.openLocation": {
    "prefix": "uni.openLocation",
    "body": [
      "uni.getLocation({",
      "\ttype: '${1|wgs84,gcj02|}',",
      "\tsuccess: (res) => {",
      "\t\tconst latitude = res.latitude",
      "\t\tconst longitude = res.longitude",
      "\t\tuni.openLocation({",
      "\t\t\tlatitude: latitude,",
      "\t\t\tlongitude: longitude,",
      "\t\t\tsuccess: () => {",
      "\t\t\t\t$0",
      "\t\t\t}",
      "\t\t})",
      "\t}",
      "})"
    ],
    "description": "uni.openLocation"
  },

  // 图像 image
  "uni.chooseImage": {
    "prefix": "uni.chooseImage",
    "body": [
      "uni.chooseImage({",
      "\tsuccess: (imageRes) => {",
      "\t\tconst tempFilePaths = imageRes.tempFilePaths",
      "\t\tuni.uploadFile({",
      "\t\t\turl: '$1',",
      "\t\t\tfilePath: tempFilePaths[0],",
      "\t\t\tname: '$2',",
      "\t\t\tformData: {$3},",
      "\t\t\tsuccess: (res) => {",
      "\t\t\t\t$0",
      "\t\t\t}",
      "\t\t})",
      "\t}",
      "})"
    ],
    "description": "uni.chooseImage"
  },
  "uni.previewImage": {
    "prefix": "uni.previewImage",
    "body": [
      "uni.chooseImage({",
      "\tsuccess: (res) => {",
      "\t\tuni.previewImage({",
      "\t\t\turls: res.tempFilePaths,",
      "\t\t\tlongPressActions: {",
      "\t\t\t\titemList: [${1:'发送给朋友', '保存图片', '收藏'}],",
      "\t\t\t\tsuccess: (data) => {",
      "\t\t\t\t\tconsole.log('选中了第' + (data.tapIndex + 1) + '个按钮,第' + (data.index + 1) + '张图片')",
      "\t\t\t\t\t$0",
      "\t\t\t\t},",
      "\t\t\t\tfail: function(err) {",
      "\t\t\t\t\tconsole.log(err.errMsg)",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t})",
      "\t}",
      "})"
    ],
    "description": "uni.previewImage"
  },
  "uni.getImageInfo": {
    "prefix": "uni.getImageInfo",
    "body": [
      "uni.chooseImage({",
      "\tsuccess: (res) => {",
      "\t\tuni.getImageInfo({",
      "\t\t\tsrc: res.tempFilePaths[0],",
      "\t\t\tsuccess: function (image) {",
      "\t\t\t\tconsole.log(image.width)",
      "\t\t\t\tconsole.log(image.height)",
      "\t\t\t\t$0",
      "\t\t\t}",
      "\t\t})",
      "\t}",
      "})"
    ],
    "description": "uni.getImageInfo"
  },
  "uni.saveImageToPhotosAlbum": {
    "prefix": "uni.saveImageToPhotosAlbum",
    "body": [
      "uni.chooseImage({",
      "\tsuccess: (res) => {",
      "\t\tuni.saveImageToPhotosAlbum({",
      "\t\t\tfilePath: res.tempFilePaths[0],",
      "\t\t\tsuccess: function () {",
      "\t\t\t\t$0",
      "\t\t\t}",
      "\t\t})",
      "\t}",
      "})"
    ],
    "description": "uni.saveImageToPhotosAlbum"
  },
  "uni.compressImage": {
    "prefix": "uni.compressImage",
    "body": [
      "uni.compressImage({",
      "\tsrc: '$1',",
      "\tquality: ${2:80},",
      "\tsuccess: (res) => {",
      "\t\tconsole.log(res.tempFilePath)",
      "\t\t$0",
      "\t}",
      "})"
    ],
    "description": "uni.compressImage"
  },

  // 音视频 audio & video
  "uni.getRecorderManager": {
    "prefix": "uni.getRecorderManager",
    "body": [
      "const recorderManager = uni.getRecorderManager()"
    ],
    "description": "uni.getRecorderManager"
  },
  "uni.getBackgroundAudioManager": {
    "prefix": "uni.getBackgroundAudioManager",
    "body": [
      "const backgroundAudioManager = uni.getBackgroundAudioManager()"
    ],
    "description": "uni.getBackgroundAudioManager"
  },
  "uni.createInnerAudioContext": {
    "prefix": "uni.createInnerAudioContext",
    "body": [
      "const innerAudioContext = uni.createInnerAudioContext()",
      "innerAudioContext.autoplay = true",
      "innerAudioContext.src = '${1:https://img-cdn-qiniu.dcloud.net.cn/uniapp/audio/music.mp3}'",
      "innerAudioContext.onPlay(() => {",
      "\t$0",
      "})",
      "innerAudioContext.onError((res) => {",
      "})"
    ],
    "description": "uni.createInnerAudioContext"
  },
  "uni.chooseVideo": {
    "prefix": "uni.chooseVideo",
    "body": [
      "uni.chooseVideo({",
      "\tcount: 1,",
      "\tsourceType: [${1:'camera', 'album'}],",
      "\tsuccess: (res) => {",
      "\t\tconsole(res.tempFilePath)",
      "\t\t$0",
      "\t}",
      "})"
    ],
    "description": "uni.chooseVideo"
  },
  "uni.saveVideoToPhotosAlbum": {
    "prefix": "uni.saveVideoToPhotosAlbum",
    "body": [
      "uni.chooseVideo({",
      "\tcount: 1,",
      "\tsourceType: [${1:'camera', 'album'}],",
      "\tsuccess: (res) => {",
      "\t\tuni.saveVideoToPhotosAlbum({",
      "\t\t\tfilePath: res.tempFilePath,",
      "\t\t\tsuccess: function () {",
      "\t\t\t\t$0",
      "\t\t\t}",
      "\t\t})",
      "\t}",
      "})"
    ],
    "description": "uni.saveVideoToPhotosAlbum"
  },
  "uni.createVideoContext": {
    "prefix": "uni.createVideoContext",
    "body": [
      "const videoContext = uni.createVideoContext('${1:videoId}', this)"
    ],
    "description": "uni.createVideoContext"
  },
  "uni.createCameraContext": {
    "prefix": "uni.createCameraContext",
    "body": [
      "const cameraContext = uni.createCameraContext()"
    ],
    "description": "uni.createCameraContext"
  },
  "uni.createLivePlayerContext": {
    "prefix": "uni.createLivePlayerContext",
    "body": [
      "uni.createLivePlayerContext('${1:livePlayerId}', this)"
    ],
    "description": "uni.createLivePlayerContext"
  },
  "uni.createLivePusherContext": {
    "prefix": "uni.createLivePusherContext",
    "body": [
      "uni.createLivePusherContext('${1:livePusherId}', this)"
    ],
    "description": "uni.createLivePusherContext"
  },

  // 系统
  "uni.getSystemInfo": {
    "prefix": "uni.getSystemInfo",
    "body": [
      "uni.getSystemInfo({",
      "\tsuccess: (res) => {",
      "\t\tconsole.log(res.model)",
      "\t\tconsole.log(res.pixelRatio)",
      "\t\tconsole.log(res.windowWidth)",
      "\t\tconsole.log(res.windowHeight)",
      "\t\tconsole.log(res.language)",
      "\t\tconsole.log(res.version)",
      "\t\tconsole.log(res.platform)",
      "\t}",
      "})"
    ],
    "description": "uni.getSystemInfo"
  },
  "uni.getSystemInfoSync": {
    "prefix": "uni.getSystemInfoSync",
    "body": [
      "const res = uni.getSystemInfoSync()",
      "console.log(res.model)",
      "console.log(res.pixelRatio)",
      "console.log(res.windowWidth)",
      "console.log(res.windowHeight)",
      "console.log(res.language)",
      "console.log(res.version)",
      "console.log(res.platform)"
    ],
    "description": "uni.getSystemInfoSync"
  },
  "uni.canIUse": {
    "prefix": "uni.canIUse",
    "body": [
      "uni.canIUse('$0')"
    ],
    "description": "uni.canIUse"
  },
  "uni.onMemoryWarning": {
    "prefix": "uni.onMemoryWarning",
    "body": [
      "uni.onMemoryWarning(() => {",
      "\t$0",
      "})"
    ],
    "description": "uni.onMemoryWarning"
  },

  // 网络 network
  "uni.getNetworkType": {
    "prefix": "uni.getNetworkType",
    "body": [
      "uni.getNetworkType({",
      "\tsuccess: (res) => {",
      "\t\tconsole.log(res.networkType)$0",
      "\t}",
      "});"
    ],
    "description": "uni.getNetworkType"
  },
  "uni.onNetworkStatusChange": {
    "prefix": "uni.onNetworkStatusChange",
    "body": [
      "uni.onNetworkStatusChange(function (res) {",
      "\tconsole.log(res.isConnected)",
      "\tconsole.log(res.networkType)$0",
      "});"
    ],
    "description": "uni.onNetworkStatusChange"
  },

  // 硬件、传感器
  "uni.onAccelerometerChange": {
    "prefix": "uni.onAccelerometerChange",
    "body": [
      "uni.onAccelerometerChange((res) => {",
      "\tconsole.log(res.x)",
      "\tconsole.log(res.y)",
      "\tconsole.log(res.z)$0",
      "})"
    ],
    "description": "uni.onAccelerometerChange"
  },
  "uni.startAccelerometer": {
    "prefix": "uni.startAccelerometer",
    "body": [
      "uni.startAccelerometer()"
    ],
    "description": "uni.startAccelerometer"
  },
  "uni.stopAccelerometer": {
    "prefix": "uni.stopAccelerometer",
    "body": [
      "uni.stopAccelerometer()"
    ],
    "description": "uni.stopAccelerometer"
  },
  "uni.onCompassChange": {
    "prefix": "uni.onCompassChange",
    "body": [
      "uni.onCompassChange((res) => {",
      "\tconsole.log(res.direction)$0",
      "})"
    ],
    "description": "uni.onCompassChange"
  },
  "uni.startCompass": {
    "prefix": "uni.startCompass",
    "body": [
      "uni.startCompass()"
    ],
    "description": "uni.startCompass"
  },
  "uni.stopCompass": {
    "prefix": "uni.stopCompass",
    "body": [
      "uni.stopCompass"
    ],
    "description": "uni.stopCompass"
  },
  "uni.onGyroscopeChange": {
    "prefix": "uni.onGyroscopeChange",
    "body": [
      "uni.onGyroscopeChange()"
    ],
    "description": "uni.onGyroscopeChange"
  },

  // 导航栏 NavigationBar
  "uni.setNavigationBarTitle": {
    "prefix": "uni.setNavigationBarTitle",
    "body": [
      "uni.setNavigationBarTitle({",
      "\ttitle: '$0'",
      "})"
    ],
    "description": "uni.setNavigationBarTitle"
  },
  "uni.setNavigationBarColor": {
    "prefix": "uni.setNavigationBarColor",
    "body": [
      "uni.setNavigationBarColor({",
      "\tfrontColor: '${1:#ffffff}',",
      "\tbackgroundColor: '${2:#ff0000}',",
      "\tanimation: {",
      "\t\tduration: ${3:400},",
      "\t\ttimingFunc: '${4:easeIn}'",
      "\t}",
      "})"
    ],
    "description": "uni.setNavigationBarColor"
  },
  "uni.showNavigationBarLoading": {
    "prefix": "uni.showNavigationBarLoading",
    "body": [
      "uni.showNavigationBarLoading()"
    ],
    "description": "uni.showNavigationBarLoading"
  },
  "uni.hideNavigationBarLoading": {
    "prefix": "uni.hideNavigationBarLoading",
    "body": [
      "uni.hideNavigationBarLoading()"
    ],
    "description": "uni.hideNavigationBarLoading"
  },

  // TabBar
  "uni.setTabBarItem": {
    "prefix": "uni.setTabBarItem",
    "body": [
      "uni.setTabBarItem({",
      "\tindex: ${1:0},",
      "\ttext: '${2:text}',",
      "\ticonPath: '${3:/path/to/iconPath}',",
      "\tselectedIconPath: '${4:/path/to/selectedIconPath}'",
      "})"
    ],
    "description": "uni.setTabBarItem"
  },
  "uni.setTabBarStyle": {
    "prefix": "uni.setTabBarStyle",
    "body": [
      "uni.setTabBarStyle({",
      "\tcolor: '${1:#FF0000}',",
      "\tselectedColor: '${2:#00FF00}',",
      "\tbackgroundColor: '${3:#0000FF}',",
      "\tborderStyle: '${4:white}'",
      "})"
    ],
    "description": "uni.setTabBarStyle"
  },
  "uni.hideTabBar": {
    "prefix": "uni.hideTabBar",
    "body": [
      "uni.hideTabBar()"
    ],
    "description": "uni.hideTabBar"
  },
  "uni.showTabBar": {
    "prefix": "uni.showTabBar",
    "body": [
        "uni.showTabBar()"
    ],
    "description": "uni.showTabBar"
  },
  "uni.setTabBarBadge": {
    "prefix": "uni.setTabBarBadge",
    "body": [
      "uni.setTabBarBadge({",
      "\tindex: ${1:0},",
      "\ttext: '${1:text}'",
      "})"
    ],
    "description": "uni.setTabBarBadge"
  },
  "uni.removeTabBarBadge": {
    "prefix": "uni.removeTabBarBadge",
    "body": [
      "uni.removeTabBarBadge({",
      "\tindex: ${1:0},",
      "})"
    ],
    "description": "uni.removeTabBarBadge"
  },
  "uni.showTabBarRedDot": {
    "prefix": "uni.showTabBarRedDot",
    "body": [
      "uni.showTabBarRedDot({",
      "\tindex: ${1:0},",
      "})"
    ],
    "description": "uni.showTabBarRedDot"
  },
  "uni.hideTabBarRedDot": {
    "prefix": "uni.hideTabBarRedDot",
    "body": [
      "uni.hideTabBarRedDot({",
      "\tindex: ${1:0},",
      "})"
    ],
    "description": "uni.hideTabBarRedDot"
  },

  // 背景 background
  "uni.setBackgroundColor": {
    "prefix": "uni.setBackgroundColor",
    "body": [
      "uni.setBackgroundColor({",
      "\tbackgroundColor: '${1:#ffffff}'",
      "\backgroundColorTop: '${2:#ffffff}'",
      "\backgroundColorBottom: '${3:#ffffff}'",
      "})"
    ],
    "description": "uni.setBackgroundColor"
  },
  "uni.setBackgroundTextStyle": {
    "prefix": "uni.setBackgroundTextStyle",
    "body": [
      "uni.setBackgroundTextStyle({",
      "\ttextStyle: '${1:dark}'",
      "})"
    ],
    "description": "uni.setBackgroundTextStyle"
  },



  // 窗口 window
  "uni.onWindowResize": {
    "prefix": "uni.onWindowResize",
    "body": [
      "uni.onWindowResize((res) => {",
      "\tconsole.log('变化后的窗口宽度=' + res.size.windowWidth)",
      "\tconsole.log('变化后的窗口高度=' + res.size.windowHeight)",
      "\t$0",
      "})"
    ],
    "description": "uni.onWindowResize"
  },
  "uni.offWindowResize": {
    "prefix": "uni.offWindowResize",
    "body": [
      "uni.offWindowResize(() => {",
      "\t$0",
      "})"
    ],
    "description": "uni.offWindowResize"
  },
  "uni.pageScrollTo": {
    "prefix": "uni.pageScrollTo",
    "body": [
      "uni.pageScrollTo({",
      "\tscrollTop: ${1:0},",
      "\tduration: ${2:300}",
      "})"
    ],
    "description": "uni.pageScrollTo"
  },

  // 其他
  "uniapp globalData": {
    "prefix": "uni:globalData",
    "body": [
      "getApp().globalData."
    ],
    "description": "uni:globalData"
  },
  "uniapp getCurrentPages": {
    "prefix": "getCurrentPages",
    "body": [
      "getCurrentPages()"
    ],
    "description": "getCurrentPages"
  },
  "uni.createAnimation": {
    "prefix": "uni.createAnimation",
    "body": [
      "let animation = uni.createAnimation({",
      "\ttransformOrigin: '${1:50% 50%}',",
      "\tduration: ${2:1000},",
      "\ttimingFunction: '${3:ease}',",
      "\tdelay: ${4:0}",
      "})"
    ],
    "description": "uni.createAnimation"
  },
  "uni.loadFontFace": {
    "prefix": "uni.loadFontFace",
    "body": [
      "uni.loadFontFace({",
      "\tfamily: '${1:Serif Bold}',",
      "\tsource: 'url($2)',",
      "\tsuccess() {",
      "\t\t$0",
      "\t}",
      "})"
    ],
    "description": "uni.loadFontFace"
  },

}
